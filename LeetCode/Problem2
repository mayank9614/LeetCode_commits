
#################################################################################################################
# Question 
# You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.
# You may assume the two numbers do not contain any leading zero, except the number 0 itself.

##################################################################################################################
# Initialize a dummy node and a current pointer to keep track of the current position in the new linked list.
# Initialize variables to store the current digit, carry-over, and sum.
# Iterate through both linked lists until both of them are exhausted.
# Set the current digit to the sum of the values of the current nodes and the carry-over.
# Update the carry-over if the current digit is greater than or equal to 10 (carry-over will be 1 in this case).
# Move the current pointers of both linked lists to their next nodes.
# If any linked list is not exhausted, iterate through the remaining nodes and add them to the sum, considering the carry-over.
# If there is still a carry-over after iterating through all nodes, add a new node with the value of the carry-over to the new linked list.
# Return the next node of the dummy node, which will be the head of the resulting linked list.

##################################################################################################################
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """ 
        dummy = ListNode()
        current = dummy
        carry = 0

        while l1 or l2:
            digit = carry

            if l1:
                digit += l1.val
                l1 = l1.next

            if l2:
                digit += l2.val
                l2 = l2.next

            carry = digit // 10
            digit %= 10

            current.next = ListNode(digit)
            current = current.next

        if carry:
            current.next = ListNode(carry)

        return dummy.next
